{"version":3,"sources":["hooks/use-immer-state.js","utils/expand-responses.js","utils/ga-event.js","utils/redoc-default-settings.js","utils/redoc-default-theme.js","utils/redoc-options.js","utils/to-readable-string.js","utils/to-rgba-string.js","hooks/use-redoc-settings.js","hooks/use-immer-reducer.js","reducers/redoc-theme.js","hooks/use-redoc-theme.js","contexts/redoc.js","utils/html-template.js","theme/redoc-editor-default.js","components/header-menu/index.js","components/header-tabs/index.js","contexts/custom-scrollbars.js","components/custom-scrollbars/index.js","components/page-html/index.js","components/page-share/index.js","components/sidebar/sidebar-list-item-icon.js","components/sidebar/sidebar-list-item.js","components/expansion-panel/index.js","components/sidebar-panel/index.js","components/panel-list-item/index.js","components/list-item-base/index.js","components/list-item-boolean/index.js","components/list-item-divider/index.js","components/color-picker/index.js","components/list-item-color/index.js","components/list-item-input/index.js","components/redoc-settings-labels/index.js","components/redoc-panel-settings/index.js","components/redoc-settings-general/index.js","components/redoc-settings-expand-responses/index.js","components/redoc-theme-colors/borders-colors-items.js","components/redoc-theme-colors/http-colors-items.js","components/list-item-color-multiple/index.js","components/redoc-theme-colors/main-colors-items.js","components/redoc-theme-colors/responses-colors-items.js","components/list-item-integer/index.js","components/list-item-unit/index.js","components/list-item-select/index.js","components/list-item-text-transform/index.js","components/list-item-smoothing/index.js","components/list-item-weight/index.js","components/redoc-panel-theme/index.js","components/redoc-theme-general/index.js","components/redoc-theme-colors/index.js","components/redoc-theme-schema/index.js","components/redoc-theme-typography/index.js","components/redoc-theme-menu/index.js","hooks/use-toggle.js","components/sidebar/index.js","components/layout/layout.js","hooks/use-google-analytics.js","components/layout/index.js","app.js","serviceWorker.js","index.js"],"names":["useImmerState","initialState","_React$useState","React","useState","_React$useState2","Object","slicedToArray","state","setState","setter","produce","expand_responses","informationResponses","100","101","102","103","successfulResponses","200","201","202","203","204","205","206","207","208","226","redirectionMessages","300","301","302","303","304","305","306","307","308","clientErrorResponses","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","425","426","428","429","431","451","serverErrorResponses","500","501","502","503","504","505","506","507","508","510","511","ga_event","category","action","label","arguments","length","undefined","value","window","gtag","event_category","event_label","redoc_default_settings","specUrl","concat","process","options","backgroundColor","expandResponses","labels","enum","enumSingleValue","enumArray","default","deprecated","example","nullable","recursive","arrayOf","redoc_default_theme","spacing","unit","sectionHorizontal","sectionVertical","breakpoints","small","medium","large","colors","tonalOffset","primary","main","light","dark","contrastText","success","warning","error","text","secondary","border","responses","color","redirect","info","http","get","post","put","patch","delete","basic","link","head","schema","linesColor","defaultDetailsWidth","typeNameColor","typeTitleColor","requireLabelColor","labelsTextSize","nestingSpacing","nestedBackground","arrow","size","typography","fontSize","lineHeight","fontWeightRegular","fontWeightBold","fontWeightLight","fontFamily","smoothing","optimizeSpeed","headings","fontWeight","code","wrap","links","visited","hover","menu","width","textColor","groupItems","textTransform","level1Items","logo","maxHeight","maxWidth","gutter","rightPanel","codeSample","redoc_options","property","to_readable_string","prop","replace","_","$1","to_rgba_string","rgba","r","g","b","a","useRedocSettings","initialSettings","_useImmerState","_useImmerState2","settings","setSettings","resetSettings","gaEvent","draft","resetSpecUrl","loadSettings","objectSpread","redocOptions","reduce","acc","option","push","settingsBackgroundColor","settingsExpandResponses","all","indexOf","index","splice","settingsLabel","settingsOption","settingsSpecUrl","useImmerReducer","reducer","useReducer","setString","path","Function","setRaw","EVENTS","load","reset","boolean","integer","background","tone","redoc_theme","type","keys","forEach","key","inner","innerProp","lighten","darken","readableColor","transparentize","useRedocTheme","initialTheme","_useImmerReducer","redocThemeReducer","_useImmerReducer2","theme","dispatch","withEvent","resetTheme","themeBooleanSingle","themeColorBackground","themeColorLinks","themeColorSingle","themeColorText","themeColorTone","themeIntegerSingle","themeSpacing","themeUnitSingle","loadTheme","RedocContext","createContext","redocDefaultSettings","getConfig","encoded","getHtmlCode","setConfig","config","contexts_redoc","_ref","children","_useRedocTheme","redocDefaultTheme","_useRedocTheme2","themeActions","_useRedocSettings","_useRedocSettings2","settingsActions","join","updatedLabels","updatedDiff","updatedTheme","btoa","JSON","stringify","react_default","createElement","Provider","createMuiTheme","palette","blueGrey","deepPurple","props","MuiTab","disableRipple","disableFocusRipple","disableTouchRipple","overrides","MuiCardHeader","title","subheader","MuiCardContent","root","MuiList","display","flexDirection","height","MuiListSubheader","alignItems","justifyContent","paddingTop","paddingBottom","minHeight","gutters","paddingRight","MuiListItem","flexGrow","dense","MuiListItemText","multiline","MuiExpansionPanel","&:before","content","&$expanded","margin","expanded","MuiExpansionPanelSummary","padding","expandIcon","MuiExpansionPanelDetails","overflow","&>div>div:first-child","marginRight","marginBottom","MuiCollapse","container","wrapper","wrapperInner","&>div:first-child","MuiToolbar","defineProperty","paddingLeft","up","MuiTabs","scroller","indicator","minWidth","&$selected","selected","yupUrlSchema","string","required","trim","url","StyledInput","withStyles","Input","useStyles","makeStyles","marginLeft","github","header_menu","classes","enqueueSnackbar","useSnackbar","redoc","useContext","useEffect","AppBar","position","elevation","Toolbar","variant","Link","className","href","target","rel","underline","data-ga-event-category","data-ga-event-action","data-ga-event-label","alt","src","Typography","FormControl","inputProps","spellCheck","autoComplete","autoCorrect","autoCapitalize","onChange","evt","disableUnderline","Button","onClick","validate","then","axios","response","headers","contentType","catch","message","GithubCircle_default","colorDefault","TABS","header_tabs","pathname","location","history","disableGutters","Tabs","map","tab","Tab","CustomScrollbarsContext","update","ThumbBox","whiteSpace","Box","custom_scrollbars","componentProps","scrollbarsElement","useRef","renderThumb","style","objectWithoutProperties","assign","current","react_custom_scrollbars_lib","ref","renderThumbHorizontal","renderThumbVertical","visibility","top","left","right","bottom","& pre","& code","PageHtml","htmlCode","highlight","useMemo","react_highlight_default","language","defaultProps","amber","wordBreak","icon","PageShare","Card","CardHeader","titleTypographyProps","CardContent","substring","Paper","Warning_default","&:hover","ListItemIcon","button","&>div","ListItem","uppercase","CustomExpansionPanel","headerText","ExpansionPanel","square","ExpansionPanelSummary","ExpandMore_default","IconButtonProps","edge","ExpansionPanelDetails","borderTop","borderBottom","borderRight","SidebarPanel","sections","defaultSection","gaAction","setSelected","List","disablePadding","ListSubheader","expansion_panel","toReadableString","component","nested","panel_list_item","ListItemProps","StyledExpandLessIcon","transform","fontSizeSmall","PlayArrowIcon","StyledExpandMoreIcon","PlayArrowOutlinedIcon","ListItemBase","readable","multiple","open","primaryTypographyProps","secondaryTypographyProps","textProps","ListItemText","StyledSwitch","edgeEnd","Switch","ListItemBoolean","checked","list_item_base","dividerFullWidth","CustomDivider","hideDivider","Divider","cursor","borderRadius","popover","zIndex","ColorPicker","setOpen","stopPropagation","react_popover_default","preferPlace","isOpen","body","react_color_lib","onChangeComplete","onOuterAction","ListItemColor","color_picker","toRgbaString","rgb","input","textAlign","ListItemInput","readableText","onBlur","toUpperCase","SECTIONS","list_item_color","list_item_boolean","components","list_item_divider","list_item_input","redoc_panel_settings","sidebar_panel","borders_colors_items","http_colors_items","list","nestedTypography","ListItemColorMultiple","onChangeColor","scrollbars","TONE_COLORS","main_colors_items","list_item_color_multiple","responses_colors_items","matches","ListItemInteger","parseInt","ListItemUnit","StyledTextField","TextField","select","paper","item","ListItemSelect","items","InputProps","SelectProps","MenuProps","MenuListProps","MenuItem","VALUES","ListItemTextTransform","list_item_select","ListItemSmoothing","ListItemWeight","list_item_integer","list_item_unit","list_item_weight","list_item_smoothing","list_item_text_transform","redoc_panel_theme","useToggle","SIDEBARS","sidebar","_useToggle","_useToggle2","toggle","sidebar_list_item","sidebar_list_item_icon","Settings_default","FormatPaint_default","grid","iframe","Layout","CssBaseline","Grid","react_router","Sidebar","HeaderTabs","page_html","page_share","useGoogleAnalytics","search","click","rootNode","document","element","getAttribute","parentNode","addEventListener","removeEventListener","components_layout","pushCallback","useCallback","queryString","parse","json","atob","console","log","layout","AppContainer","react_router_dom","MuiThemeProvider","defaultTheme","build","maxSnack","anchorOrigin","horizontal","vertical","autoHideDuration","Boolean","hostname","match","ReactDOM","render","app","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50798649.chunk.js","sourcesContent":["import React from 'react';\r\nimport produce from 'immer';\r\n\r\nconst useImmerState = initialState => {\r\n  const [state, setState] = React.useState(initialState);\r\n  const setImmerState = setter => setState(produce(setter));\r\n  return [state, setImmerState];\r\n};\r\n\r\nexport default useImmerState;\r\n","export default {\r\n  informationResponses: {\r\n    100: 'Continue',\r\n    101: 'Switching Protocol',\r\n    102: 'Processing',\r\n    103: 'Early Hints',\r\n  },\r\n  successfulResponses: {\r\n    200: 'OK',\r\n    201: 'Created',\r\n    202: 'Accepted',\r\n    203: 'Non-Authoritative Information',\r\n    204: 'No Content',\r\n    205: 'Reset Content',\r\n    206: 'Partial Content',\r\n    207: 'Multi-Status ',\r\n    208: 'Multi-Status',\r\n    226: 'IM Used',\r\n  },\r\n  redirectionMessages: {\r\n    300: 'Multiple Choices',\r\n    301: 'Moved Permanently',\r\n    302: 'Found',\r\n    303: 'See Other',\r\n    304: 'Not Modified',\r\n    305: 'Use Proxy',\r\n    306: 'unused',\r\n    307: 'Temporary Redirect',\r\n    308: 'Permanent Redirect',\r\n  },\r\n  clientErrorResponses: {\r\n    400: 'Bad Request',\r\n    401: 'Unauthorized',\r\n    402: 'Payment Required',\r\n    403: 'Forbidden',\r\n    404: 'Not Found',\r\n    405: 'Method Not Allowed',\r\n    406: 'Not Acceptable',\r\n    407: 'Proxy Authentication Required',\r\n    408: 'Request Timeout',\r\n    409: 'Conflict',\r\n    410: 'Gone',\r\n    411: 'Length Required',\r\n    412: 'Precondition Failed',\r\n    413: 'Payload Too Large',\r\n    414: 'URI Too Long',\r\n    415: 'Unsupported Media Type',\r\n    416: 'Range Not Satisfiable',\r\n    417: 'Expectation Failed',\r\n    418: \"I'm a teapot\",\r\n    421: 'Misdirected Request',\r\n    422: 'Unprocessable Entity',\r\n    423: 'Locked',\r\n    424: 'Failed Dependency',\r\n    425: 'Too Early',\r\n    426: 'Upgrade Required',\r\n    428: 'Precondition Required',\r\n    429: 'Too Many Requests',\r\n    431: 'Request Header Fields Too Large',\r\n    451: 'Unavailable For Legal Reasons',\r\n  },\r\n  serverErrorResponses: {\r\n    500: 'Internal Server Error',\r\n    501: 'Not Implemented',\r\n    502: 'Bad Gateway',\r\n    503: 'Service Unavailable',\r\n    504: 'Gateway Timeout',\r\n    505: 'HTTP Version Not Supported',\r\n    506: 'Variant Also Negotiates',\r\n    507: 'Insufficient Storage',\r\n    508: 'Loop Detected',\r\n    510: 'Not Extended',\r\n    511: 'Network Authentication Required',\r\n  },\r\n};\r\n","export default (category, action, label = '', value = '') => {\r\n  if (window.gtag) {\r\n    window.gtag('event', action, {\r\n      event_category: category,\r\n      event_label: label,\r\n      value: value,\r\n    });\r\n  }\r\n};\r\n","export default {\r\n  specUrl: `${process.env.REACT_APP_BASE_URL}/openapi.yaml`,\r\n  options: ['untrustedSpec'],\r\n  backgroundColor: '#ffffff',\r\n  expandResponses: [],\r\n  labels: {\r\n    enum: 'Enum',\r\n    enumSingleValue: 'Value',\r\n    enumArray: 'Items',\r\n    default: 'Default',\r\n    deprecated: 'Deprecated',\r\n    example: 'Example',\r\n    nullable: 'Nullable',\r\n    recursive: 'Recursive',\r\n    arrayOf: 'Array of ',\r\n  },\r\n};\r\n","export default {\r\n  spacing: {\r\n    unit: 5,\r\n    sectionHorizontal: 40,\r\n    sectionVertical: 40,\r\n  },\r\n  breakpoints: {\r\n    small: '50rem',\r\n    medium: '85rem',\r\n    large: '105rem',\r\n  },\r\n  colors: {\r\n    tonalOffset: 0.3,\r\n    primary: {\r\n      main: '#32329f',\r\n      light: '#8e8edc',\r\n      dark: '#0d0d2b',\r\n      contrastText: '#ffffff',\r\n    },\r\n    success: {\r\n      main: '#00aa13',\r\n      light: '#44ff59',\r\n      dark: '#001102',\r\n      contrastText: '#000000',\r\n    },\r\n    warning: {\r\n      main: '#d4ad03',\r\n      light: '#fde373',\r\n      dark: '#3d3201',\r\n      contrastText: '#ffffff',\r\n    },\r\n    error: {\r\n      main: '#e53935',\r\n      light: '#f6bebd',\r\n      dark: '#72110f',\r\n      contrastText: '#000000',\r\n    },\r\n    text: {\r\n      primary: '#333333',\r\n      secondary: '#808080',\r\n    },\r\n    border: {\r\n      dark: 'rgba(0,0,0, 0.1)',\r\n      light: '#ffffff',\r\n    },\r\n    responses: {\r\n      success: {\r\n        color: '#00aa13',\r\n        backgroundColor: 'rgba(0,170,19,0.1)',\r\n      },\r\n      error: {\r\n        color: '#e53935',\r\n        backgroundColor: 'rgba(229,57,53,0.1)',\r\n      },\r\n      redirect: {\r\n        color: '#ffa500',\r\n        backgroundColor: 'rgba(255,165,0,0.1)',\r\n      },\r\n      info: {\r\n        color: '#87ceeb',\r\n        backgroundColor: 'rgba(135,206,235,0.1)',\r\n      },\r\n    },\r\n    http: {\r\n      get: '#6bbd5b',\r\n      post: '#248fb2',\r\n      put: '#9b708b',\r\n      options: '#d3ca12',\r\n      patch: '#e09d43',\r\n      delete: '#e27a7a',\r\n      basic: '#999999',\r\n      link: '#31bbb6',\r\n      head: '#c167e4',\r\n    },\r\n  },\r\n  schema: {\r\n    linesColor: '#a4a4c6',\r\n    defaultDetailsWidth: '75%',\r\n    typeNameColor: '#808080',\r\n    typeTitleColor: '#808080',\r\n    requireLabelColor: '#e53935',\r\n    labelsTextSize: '0.9em',\r\n    nestingSpacing: '1em',\r\n    nestedBackground: '#fafafa',\r\n    arrow: {\r\n      size: '1.1em',\r\n      color: '#808080',\r\n    },\r\n  },\r\n  typography: {\r\n    fontSize: '14px',\r\n    lineHeight: '1.5em',\r\n    fontWeightRegular: '400',\r\n    fontWeightBold: '600',\r\n    fontWeightLight: '300',\r\n    fontFamily: 'Roboto, sans-serif',\r\n    smoothing: 'antialiased',\r\n    optimizeSpeed: true,\r\n    headings: {\r\n      fontFamily: 'Montserrat, sans-serif',\r\n      fontWeight: '400',\r\n      lineHeight: '1.6em',\r\n    },\r\n    code: {\r\n      fontSize: '13px',\r\n      fontFamily: 'Courier, monospace',\r\n      lineHeight: '1.5em',\r\n      fontWeight: '400',\r\n      color: '#e53935',\r\n      backgroundColor: 'rgba(38, 50, 56, 0.05)',\r\n      wrap: false,\r\n    },\r\n    links: {\r\n      color: '#32329f',\r\n      visited: '#32329f',\r\n      hover: '#6868cf',\r\n    },\r\n  },\r\n  menu: {\r\n    width: '260px',\r\n    backgroundColor: '#fafafa',\r\n    textColor: '#333333',\r\n    groupItems: {\r\n      textTransform: 'uppercase',\r\n    },\r\n    level1Items: {\r\n      textTransform: 'none',\r\n    },\r\n    arrow: {\r\n      size: '1.5em',\r\n      color: '#333333',\r\n    },\r\n  },\r\n  logo: {\r\n    maxHeight: '260px',\r\n    maxWidth: '260px',\r\n    gutter: '2px',\r\n  },\r\n  rightPanel: {\r\n    backgroundColor: '#263238',\r\n    width: '40%',\r\n    textColor: '#ffffff',\r\n  },\r\n  codeSample: {\r\n    backgroundColor: '#11171a',\r\n  },\r\n};\r\n","// expandResponses: '',\r\nexport default [\r\n  {\r\n    text: 'untrustedSpec',\r\n    property: 'untrustedSpec',\r\n  },\r\n  {\r\n    text: 'suppressWarnings',\r\n    property: 'suppressWarnings',\r\n  },\r\n  {\r\n    text: 'hideHostname',\r\n    property: 'hideHostname',\r\n  },\r\n  {\r\n    text: 'requiredPropsFirst',\r\n    property: 'requiredPropsFirst',\r\n  },\r\n  {\r\n    text: 'sortPropsAlphabetically',\r\n    property: 'sortPropsAlphabetically',\r\n  },\r\n  {\r\n    text: 'showVendorsExtensions',\r\n    property: 'showExtensions',\r\n  },\r\n  {\r\n    text: 'hideAuthentication',\r\n    property: 'noAutoAuth',\r\n  },\r\n  {\r\n    text: 'showPathInMiddlePanel',\r\n    property: 'pathInMiddlePanel',\r\n  },\r\n  {\r\n    text: 'hideLoading',\r\n    property: 'hideLoading',\r\n  },\r\n  {\r\n    text: 'useNativeScrollbars',\r\n    property: 'nativeScrollbars',\r\n  },\r\n  {\r\n    text: 'disableSearch',\r\n    property: 'disableSearch',\r\n  },\r\n  {\r\n    text: 'hideDownloadButton',\r\n    property: 'hideDownloadButton',\r\n  },\r\n  {\r\n    text: 'showOnlyRequiredInSamples',\r\n    property: 'onlyRequiredInSamples',\r\n  },\r\n  {\r\n    text: 'hideSingleRequestSampleTab',\r\n    property: 'hideSingleRequestSampleTab',\r\n  },\r\n  {\r\n    text: 'enumSkipQuotes',\r\n    property: 'enumSkipQuotes',\r\n  },\r\n];\r\n","export default prop => prop.replace(/([A-Z\\d])/g, (_, $1) => ` ${$1}`);\r\n","export default rgba => `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\r\n","import useImmerState from './use-immer-state';\r\n\r\nimport { gaEvent, redocOptions } from '../utils';\r\n\r\nexport const ACTIONS = {\r\n  resetSettings: () => {},\r\n  resetSpecUrl: () => {},\r\n  settingsBackgroundColor: value => {},\r\n  settingsExpandResponses: value => {},\r\n  settingsLabel: (property, value) => {},\r\n  settingsOption: property => {},\r\n  settingsSpecUrl: value => {},\r\n};\r\n\r\nconst useRedocSettings = initialSettings => {\r\n  const [settings, setSettings] = useImmerState(initialSettings);\r\n  const loadSettings = settings => {\r\n    resetSpecUrl(false);\r\n    resetSettings(false);\r\n    setSettings(draft => {\r\n      draft.specUrl = settings.specUrl;\r\n      draft.backgroundColor = settings.backgroundColor;\r\n      if (settings.options.labels) {\r\n        draft.labels = { ...draft.labels, ...settings.options.labels };\r\n      }\r\n      const options = redocOptions.reduce(\r\n        (acc, option) => {\r\n          if (\r\n            option.property !== 'untrustedSpec' &&\r\n            settings.options[option.property]\r\n          ) {\r\n            acc.push(option.property);\r\n          }\r\n          return acc;\r\n        },\r\n        ['untrustedSpec']\r\n      );\r\n      draft.options = options;\r\n    });\r\n  };\r\n  const resetSettings = (withEvents = true) => {\r\n    if (withEvents) gaEvent('redoc', 'settings', 'reset');\r\n    setSettings(draft => {\r\n      draft.backgroundColor = initialSettings.backgroundColor;\r\n      draft.options = initialSettings.options;\r\n      draft.labels = initialSettings.labels;\r\n    });\r\n  };\r\n  const resetSpecUrl = (withEvents = true) => {\r\n    if (withEvents) gaEvent('redoc', 'specUrl', 'reset');\r\n    setSettings(draft => {\r\n      draft.specUrl = initialSettings.specUrl;\r\n    });\r\n  };\r\n  const settingsBackgroundColor = value => {\r\n    gaEvent('redoc', 'theme', 'backgroundColor', value);\r\n    setSettings(draft => {\r\n      draft.backgroundColor = value;\r\n    });\r\n  };\r\n  const settingsExpandResponses = value => {\r\n    gaEvent('redoc', 'options', 'expandResponses', value);\r\n    setSettings(draft => {\r\n      const all = draft.expandResponses.indexOf('all') !== -1;\r\n      if (value === 'all' && all) {\r\n        draft.expandResponses = [];\r\n      } else if (value === 'all' && !all) {\r\n        draft.expandResponses = ['all'];\r\n      } else if (all) {\r\n        draft.expandResponses = [value];\r\n      } else {\r\n        const index = draft.expandResponses.indexOf(value);\r\n        if (index === -1) draft.expandResponses.push(value);\r\n        else draft.expandResponses.splice(index, 1);\r\n      }\r\n    });\r\n  };\r\n  const settingsLabel = (property, value) => {\r\n    gaEvent('redoc', 'labels', property, value);\r\n    setSettings(draft => {\r\n      draft.labels[property] = value;\r\n    });\r\n  };\r\n  const settingsOption = property => {\r\n    gaEvent(\r\n      'redoc',\r\n      'options',\r\n      property,\r\n      settings.options.indexOf(property) === -1\r\n    );\r\n    setSettings(draft => {\r\n      const index = draft.options.indexOf(property);\r\n      if (index === -1) draft.options.push(property);\r\n      else draft.options.splice(index, 1);\r\n    });\r\n  };\r\n  const settingsSpecUrl = value => {\r\n    gaEvent('redoc', 'specUrl', 'load', value);\r\n    setSettings(draft => {\r\n      draft.specUrl = value;\r\n    });\r\n  };\r\n  return [\r\n    settings,\r\n    {\r\n      loadSettings,\r\n      resetSettings,\r\n      resetSpecUrl,\r\n      settingsBackgroundColor,\r\n      settingsExpandResponses,\r\n      settingsLabel,\r\n      settingsOption,\r\n      settingsSpecUrl,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useRedocSettings;\r\n","import React from 'react';\r\nimport produce from 'immer';\r\n\r\nconst useImmerReducer = (reducer, initialState) =>\r\n  React.useReducer(produce(reducer), initialState);\r\n\r\nexport default useImmerReducer;\r\n","/* eslint-disable no-new-func */\r\n\r\nimport { darken, lighten, readableColor, transparentize } from 'polished';\r\n\r\nconst setString = (path, value) =>\r\n  new Function('draft', `draft.${path} = \"${value}\";`);\r\n\r\nconst setRaw = (path, value) =>\r\n  new Function('draft', `draft.${path} = ${value};`);\r\n\r\nexport const EVENTS = {\r\n  theme: {\r\n    load: 'redoc.theme.load',\r\n    reset: 'redoc.theme.reset',\r\n    spacing: 'redoc.theme.spacing',\r\n  },\r\n  single: {\r\n    boolean: 'redoc.single.boolean',\r\n    color: 'redoc.single.color',\r\n    integer: 'redoc.single.integer',\r\n    unit: 'redoc.single.unit',\r\n  },\r\n  colors: {\r\n    background: 'redoc.colors.background',\r\n    links: 'redoc.colors.links',\r\n    tone: 'redoc.colors.tone',\r\n    text: 'redoc.colors.text',\r\n  },\r\n};\r\n\r\nexport default (draft, action) => {\r\n  switch (action.type) {\r\n    case EVENTS.theme.load:\r\n      Object.keys(action.value).forEach(key => {\r\n        Object.keys(action.value[key]).forEach(prop => {\r\n          switch (key) {\r\n            case 'spacing':\r\n              setRaw(`spacing.${prop}`, action.value[key][prop])(draft);\r\n              break;\r\n            case 'schema':\r\n            case 'typography':\r\n            case 'menu':\r\n            case 'colors':\r\n              switch (prop) {\r\n                case 'arrow':\r\n                case 'groupItems':\r\n                case 'level1Items':\r\n                case 'links':\r\n                case 'headings':\r\n                case 'code':\r\n                case 'primary':\r\n                case 'success':\r\n                case 'warning':\r\n                case 'error':\r\n                case 'text':\r\n                case 'border':\r\n                case 'http':\r\n                case 'responses':\r\n                  Object.keys(action.value[key][prop]).forEach(inner => {\r\n                    switch (inner) {\r\n                      case 'wrap':\r\n                        setRaw(\r\n                          `${key}.${prop}.${inner}`,\r\n                          action.value[key][prop][inner]\r\n                        )(draft);\r\n                        break;\r\n                      case 'success':\r\n                      case 'error':\r\n                      case 'redirect':\r\n                      case 'info':\r\n                        Object.keys(action.value[key][prop][inner]).forEach(\r\n                          innerProp => {\r\n                            setString(\r\n                              `${key}.${prop}.${inner}.${innerProp}`,\r\n                              action.value[key][prop][inner][innerProp]\r\n                            )(draft);\r\n                          }\r\n                        );\r\n                        break;\r\n                      default:\r\n                        setString(\r\n                          `${key}.${prop}.${inner}`,\r\n                          action.value[key][prop][inner]\r\n                        )(draft);\r\n                        break;\r\n                    }\r\n                  });\r\n                  break;\r\n                case 'optimizeSpeed':\r\n                  setRaw(`${key}.${prop}`, action.value[key][prop])(draft);\r\n                  break;\r\n                default:\r\n                  setString(`${key}.${prop}`, action.value[key][prop])(draft);\r\n                  break;\r\n              }\r\n              break;\r\n            default:\r\n              setString(`${key}.${prop}`, action.value[key][prop])(draft);\r\n              break;\r\n          }\r\n        });\r\n      });\r\n      return draft;\r\n    case EVENTS.theme.reset:\r\n      return action.value;\r\n    case EVENTS.single.boolean:\r\n    case EVENTS.single.integer:\r\n      return void setRaw(action.path, action.value)(draft);\r\n    case EVENTS.single.unit:\r\n    case EVENTS.single.color:\r\n      return void setString(action.path, action.value)(draft);\r\n    case EVENTS.theme.spacing:\r\n      setRaw(`${action.path}.unit`, action.value)(draft);\r\n      setRaw(`${action.path}.sectionHorizontal`, action.value * 8)(draft);\r\n      return void setRaw(`${action.path}.sectionVertical`, action.value * 8)(\r\n        draft\r\n      );\r\n    case EVENTS.colors.links:\r\n      setString(`${action.path}.color`, action.value)(draft);\r\n      setString(`${action.path}.visited`, action.value)(draft);\r\n      return void setString(`${action.path}.hover`, lighten(0.2, action.value))(\r\n        draft\r\n      );\r\n    case EVENTS.colors.tone:\r\n      setString(`${action.path}.main`, action.value)(draft);\r\n      setString(\r\n        `${action.path}.light`,\r\n        lighten(draft.colors.tonalOffset, action.value)\r\n      )(draft);\r\n      setString(\r\n        `${action.path}.dark`,\r\n        darken(draft.colors.tonalOffset, action.value)\r\n      )(draft);\r\n      return void setString(\r\n        `${action.path}.contrastText`,\r\n        readableColor(action.value)\r\n      )(draft);\r\n    case EVENTS.colors.background:\r\n      setString(`${action.path}.color`, action.value)(draft);\r\n      return void setString(\r\n        `${action.path}.backgroundColor`,\r\n        transparentize(0.9, action.value)\r\n      )(draft);\r\n    case EVENTS.colors.text:\r\n      setString(`${action.path}.primary`, action.value)(draft);\r\n      return void setString(\r\n        `${action.path}.secondary`,\r\n        lighten(draft.colors.tonalOffset, action.value)\r\n      )(draft);\r\n    default:\r\n      return draft;\r\n  }\r\n};\r\n","import useImmerReducer from './use-immer-reducer';\r\nimport redocThemeReducer, { EVENTS } from '../reducers/redoc-theme';\r\n\r\nimport { gaEvent } from '../utils';\r\n\r\nexport const ACTIONS = {\r\n  resetTheme: () => {},\r\n  themeBooleanSingle: (path, value) => {},\r\n  themeColorBackground: (path, value) => {},\r\n  themeColorLinks: (path, value) => {},\r\n  themeColorSingle: (path, value) => {},\r\n  themeColorText: (path, value) => {},\r\n  themeColorTone: (path, value) => {},\r\n  themeIntegerSingle: (path, value) => {},\r\n  themeSpacing: (path, value) => {},\r\n  themeUnitSingle: (path, value) => {},\r\n};\r\n\r\nconst useRedocTheme = initialTheme => {\r\n  const [theme, dispatch] = useImmerReducer(redocThemeReducer, initialTheme);\r\n  const withEvent = type => (path, value) => {\r\n    gaEvent('redoc', 'theme', path, value);\r\n    dispatch({ type, path, value });\r\n  };\r\n  const loadTheme = theme => {\r\n    resetTheme(false);\r\n    dispatch({ type: EVENTS.theme.load, value: theme });\r\n  };\r\n  const resetTheme = (withEvents = true) => {\r\n    if (withEvents) gaEvent('redoc', 'theme', 'reset');\r\n    dispatch({ type: EVENTS.theme.reset, value: initialTheme });\r\n  };\r\n  const themeBooleanSingle = withEvent(EVENTS.single.boolean);\r\n  const themeColorBackground = withEvent(EVENTS.colors.background);\r\n  const themeColorLinks = withEvent(EVENTS.colors.links);\r\n  const themeColorSingle = withEvent(EVENTS.single.color);\r\n  const themeColorText = withEvent(EVENTS.colors.text);\r\n  const themeColorTone = withEvent(EVENTS.colors.tone);\r\n  const themeIntegerSingle = withEvent(EVENTS.single.integer);\r\n  const themeSpacing = withEvent(EVENTS.theme.spacing);\r\n  const themeUnitSingle = withEvent(EVENTS.single.unit);\r\n  return [\r\n    theme,\r\n    {\r\n      loadTheme,\r\n      resetTheme,\r\n      themeBooleanSingle,\r\n      themeColorBackground,\r\n      themeColorLinks,\r\n      themeColorSingle,\r\n      themeColorText,\r\n      themeColorTone,\r\n      themeIntegerSingle,\r\n      themeSpacing,\r\n      themeUnitSingle,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useRedocTheme;\r\n","import React from 'react';\r\nimport { updatedDiff } from 'deep-object-diff';\r\n\r\nimport useRedocSettings, {\r\n  ACTIONS as ACTIONS_SETTINGS,\r\n} from '../hooks/use-redoc-settings';\r\nimport useRedocTheme, {\r\n  ACTIONS as ACTIONS_THEME,\r\n} from '../hooks/use-redoc-theme';\r\nimport {\r\n  htmlTemplate,\r\n  redocDefaultSettings,\r\n  redocDefaultTheme,\r\n} from '../utils';\r\n\r\nexport const RedocContext = React.createContext({\r\n  ...redocDefaultSettings,\r\n  ...ACTIONS_SETTINGS,\r\n  ...ACTIONS_THEME,\r\n  getConfig: encoded => {},\r\n  getHtmlCode: () => {},\r\n  setConfig: config => {},\r\n});\r\n\r\nexport default ({ children }) => {\r\n  const [theme, themeActions] = useRedocTheme(redocDefaultTheme);\r\n  const [settings, settingsActions] = useRedocSettings(redocDefaultSettings);\r\n  const getConfig = (encoded = false) => {\r\n    const config = {\r\n      specUrl: settings.specUrl,\r\n      backgroundColor: settings.backgroundColor,\r\n      options: {\r\n        ...settings.options.reduce((acc, value) => {\r\n          acc[value] = true;\r\n          return acc;\r\n        }, {}),\r\n      },\r\n    };\r\n    if (settings.expandResponses.length > 0) {\r\n      config.options.expandResponses = settings.expandResponses.join(',');\r\n    }\r\n    const updatedLabels = updatedDiff(\r\n      redocDefaultSettings.labels,\r\n      settings.labels\r\n    );\r\n    if (Object.keys(updatedLabels).length > 0)\r\n      config.options.labels = updatedLabels;\r\n    const updatedTheme = updatedDiff(redocDefaultTheme, theme);\r\n    if (Object.keys(updatedTheme).length > 0)\r\n      config.options.theme = updatedTheme;\r\n    return encoded ? btoa(JSON.stringify(config)) : config;\r\n  };\r\n  const setConfig = config => {\r\n    settingsActions.loadSettings(config);\r\n    if (config.options.theme) {\r\n      themeActions.loadTheme(config.options.theme);\r\n    }\r\n  };\r\n  const getHtmlCode = () => htmlTemplate(getConfig());\r\n  return (\r\n    <RedocContext.Provider\r\n      value={{\r\n        ...settings,\r\n        ...settingsActions,\r\n        theme,\r\n        ...themeActions,\r\n        getConfig,\r\n        setConfig,\r\n        getHtmlCode,\r\n      }}>\r\n      {children}\r\n    </RedocContext.Provider>\r\n  );\r\n};\r\n","export default config => `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"utf-8\" />\r\n    <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n    <meta name=\"theme-color\" content=\"#000000\" />\r\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700\" />\r\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n    <style>\r\n      body {\r\n        margin: 0;\r\n        padding: 0;\r\n        background-color: '${config.backgroundColor}';\r\n      }\r\n    </style>\r\n    <title>OpenAPI Specification</title>\r\n  </head>\r\n  <body>\r\n    <noscript>You need to enable JavaScript to run this app.</noscript>\r\n    <div id=\"redoc-container\"></div>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\"> </script>\r\n    <script type=\"text/javascript\">\r\n    (function() {\r\n      Redoc.init(\r\n        \"${config.specUrl}\",\r\n        ${JSON.stringify(config.options, null, 2).replace(/\\n/g, '\\n        ')},\r\n        document.getElementById('redoc-container'));\r\n    })();\r\n    </script>\r\n  </body>\r\n</html>\r\n`;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: blueGrey,\r\n    secondary: deepPurple,\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  palette: {\r\n    ...theme.palette,\r\n    text: {\r\n      primary: theme.palette.primary.contrastText,\r\n      secondary: theme.palette.secondary.contrastText,\r\n    },\r\n  },\r\n  props: {\r\n    MuiTab: {\r\n      disableRipple: true,\r\n      disableFocusRipple: true,\r\n      disableTouchRipple: true,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiCardHeader: {\r\n      title: {\r\n        color: theme.palette.primary.dark,\r\n      },\r\n      subheader: {\r\n        color: theme.palette.primary.light,\r\n      },\r\n    },\r\n    MuiCardContent: {\r\n      root: {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n    MuiList: {\r\n      root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n      },\r\n    },\r\n    MuiListSubheader: {\r\n      root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingTop: theme.spacing(0.5),\r\n        paddingBottom: theme.spacing(0.5),\r\n        minHeight: 40,\r\n      },\r\n      gutters: {\r\n        paddingRight: theme.spacing(0.5),\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        flexGrow: 1,\r\n      },\r\n      dense: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      root: {\r\n        textTransform: 'uppercase',\r\n      },\r\n      multiline: {\r\n        display: 'flex',\r\n        alignItems: 'baseline',\r\n        justifyContent: 'space-between',\r\n      },\r\n      secondary: {\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    MuiExpansionPanel: {\r\n      root: {\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        '&:before': {\r\n          content: 'none',\r\n        },\r\n        '&$expanded': {\r\n          margin: 0,\r\n          flexGrow: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        },\r\n      },\r\n      expanded: {},\r\n    },\r\n    MuiExpansionPanelSummary: {\r\n      root: {\r\n        padding: `2px 0 2px ${theme.spacing(2)}px`,\r\n        backgroundColor: theme.palette.primary.main,\r\n        minHeight: 'auto',\r\n        '&$expanded': {\r\n          minHeight: 'auto',\r\n        },\r\n      },\r\n      content: {\r\n        margin: 0,\r\n        '&$expanded': {\r\n          margin: 0,\r\n        },\r\n      },\r\n      expandIcon: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n      },\r\n      expanded: {},\r\n    },\r\n    MuiExpansionPanelDetails: {\r\n      root: {\r\n        overflow: 'auto',\r\n        padding: 0,\r\n        flexGrow: 1,\r\n        '&>div>div:first-child': {\r\n          marginRight: `-${theme.spacing(2) + 1}px !important`,\r\n          marginBottom: `-${theme.spacing(2) + 1}px !important`,\r\n        },\r\n      },\r\n    },\r\n    MuiCollapse: {\r\n      container: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n      },\r\n      wrapper: {\r\n        flexGrow: 1,\r\n      },\r\n      wrapperInner: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        '&>div:first-child': {\r\n          display: 'flex',\r\n          flexGrow: 1,\r\n        },\r\n      },\r\n    },\r\n    MuiToolbar: {\r\n      root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      },\r\n      dense: {\r\n        minHeight: theme.spacing(4),\r\n      },\r\n      gutters: {\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: 0,\r\n        [theme.breakpoints.up('sm')]: {\r\n          paddingLeft: theme.spacing(1),\r\n          paddingRight: 0,\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        minHeight: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n        padding: 0,\r\n      },\r\n      scroller: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n      },\r\n      indicator: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        minWidth: 'auto',\r\n        padding: `0 ${theme.spacing(1)}px`,\r\n        minHeight: 'auto',\r\n        '&$selected': {\r\n          color: theme.palette.primary.contrastText,\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n          minWidth: 'auto',\r\n          padding: `0 ${theme.spacing(1)}px`,\r\n        },\r\n      },\r\n      selected: {},\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { string } from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport axios from 'axios';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GithubIcon from 'mdi-material-ui/GithubCircle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\n\r\nconst yupUrlSchema = string()\r\n  .required('SPEC URL is required')\r\n  .trim()\r\n  .required('SPEC URL is required')\r\n  .url('SPEC URL mus be a valid URL');\r\n\r\nconst StyledInput = withStyles({\r\n  root: {\r\n    fontSize: 12,\r\n  },\r\n})(Input);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  logo: { marginLeft: 9, marginRight: theme.spacing(2), display: 'flex' },\r\n  text: { textTransform: 'uppercase' },\r\n  url: { flexGrow: 1, marginLeft: `${theme.spacing(1)}px` },\r\n  github: {\r\n    color: theme.palette.primary.contrastText,\r\n    display: 'flex',\r\n    marginLeft: `${theme.spacing(1)}px`,\r\n    marginRight: `${theme.spacing(1)}px`,\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const redoc = React.useContext(RedocContext);\r\n  const [state, setState] = React.useState(redoc.specUrl);\r\n  React.useEffect(() => {\r\n    setState(redoc.specUrl);\r\n  }, [redoc.specUrl]);\r\n  const setSpecUrl = () => {\r\n    if (state !== redoc.specUrl) {\r\n      yupUrlSchema\r\n        .validate(state)\r\n        .then(url => axios.head(url))\r\n        .then(response => {\r\n          if (response.headers && response.headers['content-type']) {\r\n            const contentType = response.headers['content-type'];\r\n            if (\r\n              contentType.indexOf('application/json') !== -1 ||\r\n              contentType.indexOf('yaml') !== -1\r\n            ) {\r\n              redoc.settingsSpecUrl(response.config.url);\r\n            } else {\r\n              enqueueSnackbar(`Invalid Content-Type (${contentType})`, {\r\n                variant: 'error',\r\n              });\r\n              setState(redoc.specUrl);\r\n            }\r\n          } else {\r\n            enqueueSnackbar(`Invalid Content-Type`, {\r\n              variant: 'error',\r\n            });\r\n            setState(redoc.specUrl);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          enqueueSnackbar(error.message, { variant: 'error' });\r\n          setState(redoc.specUrl);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <AppBar position=\"static\" elevation={0}>\r\n      <Toolbar variant=\"dense\">\r\n        <Link\r\n          className={classes.logo}\r\n          href=\"https://github.com/Redocly/redoc\"\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n          underline=\"none\"\r\n          data-ga-event-category=\"navigation\"\r\n          data-ga-event-action=\"external\"\r\n          data-ga-event-label=\"redoc\">\r\n          <img alt=\"logo\" src=\"./logo.png\" width=\"16\" height=\"16\" />\r\n        </Link>\r\n        <Typography\r\n          className={classes.text}\r\n          variant=\"caption\"\r\n          color=\"textPrimary\">\r\n          SPEC URL:\r\n        </Typography>\r\n        <FormControl className={classes.url}>\r\n          <StyledInput\r\n            value={state}\r\n            inputProps={{\r\n              spellCheck: false,\r\n              autoComplete: 'off',\r\n              autoCorrect: 'off',\r\n              autoCapitalize: 'off',\r\n            }}\r\n            onChange={evt => setState(evt.target.value)}\r\n            disableUnderline\r\n          />\r\n        </FormControl>\r\n        <Button size=\"small\" color=\"default\" onClick={setSpecUrl}>\r\n          LOAD\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          onClick={() => redoc.resetSpecUrl()}>\r\n          RESET\r\n        </Button>\r\n        <Link\r\n          className={classes.github}\r\n          href=\"https://github.com/pointnet/redoc-editor\"\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n          underline=\"none\"\r\n          data-ga-event-category=\"navigation\"\r\n          data-ga-event-action=\"external\"\r\n          data-ga-event-label=\"github\">\r\n          <GithubIcon />\r\n        </Link>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  colorDefault: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\nconst TABS = [\r\n  { key: 'preview', value: '/' },\r\n  { key: 'html', value: '/html' },\r\n  { key: 'share', value: '/share' },\r\n];\r\n\r\nexport default ({ location: { pathname }, history: { push } }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar classes={classes} position=\"static\" elevation={0} color=\"default\">\r\n      <Toolbar variant=\"dense\" disableGutters>\r\n        <Tabs\r\n          textColor=\"inherit\"\r\n          value={pathname}\r\n          onChange={(evt, value) => {\r\n            if (pathname !== value) {\r\n              push(value);\r\n            }\r\n          }}>\r\n          {TABS.map(tab => (\r\n            <Tab\r\n              key={tab.key}\r\n              label={tab.key}\r\n              value={tab.value}\r\n              data-ga-event-category=\"navigation\"\r\n              data-ga-event-action={tab.key}\r\n            />\r\n          ))}\r\n        </Tabs>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const CustomScrollbarsContext = React.createContext({\r\n  update: () => {},\r\n});\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport { CustomScrollbarsContext } from '../../contexts/custom-scrollbars';\r\n\r\nconst ThumbBox = withStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    whiteSpace: 'nowrap',\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n}))(Box);\r\n\r\nexport default componentProps => {\r\n  const scrollbarsElement = React.useRef(null);\r\n  const renderThumb = ({ style, ...props }) => (\r\n    <ThumbBox style={style} {...props} />\r\n  );\r\n  const update = () => {\r\n    scrollbarsElement.current.update();\r\n  };\r\n  return (\r\n    <CustomScrollbarsContext.Provider value={{ update }}>\r\n      <Scrollbars\r\n        ref={scrollbarsElement}\r\n        renderThumbHorizontal={renderThumb}\r\n        renderThumbVertical={renderThumb}\r\n        {...componentProps}\r\n      />\r\n    </CustomScrollbarsContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Highlight from 'react-highlight';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport CustomScrollbars from '../custom-scrollbars';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    visibility: props => (props.path === '/html' ? 'visible' : 'hidden'),\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: theme.palette.primary.light,\r\n    padding: `${theme.spacing(1)}px`,\r\n    '&>div>div:first-child': {\r\n      right: '-1px !important',\r\n      bottom: '-1px !important',\r\n    },\r\n    '& pre': {\r\n      margin: 0,\r\n      minHeight: '100%',\r\n      display: 'flex',\r\n      '& code': {\r\n        flexGrow: 1,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHtml = ({ path }) => {\r\n  const classes = useStyles({ path });\r\n  const redoc = React.useContext(RedocContext);\r\n  const htmlCode = redoc.getHtmlCode();\r\n  const highlight = React.useMemo(() => {\r\n    return <Highlight language=\"html\">{htmlCode}</Highlight>;\r\n  }, [htmlCode]);\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CustomScrollbars>{highlight}</CustomScrollbars>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPageHtml.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n};\r\n\r\nPageHtml.defaultProps = {\r\n  path: '/',\r\n};\r\n\r\nexport default PageHtml;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport Link from '@material-ui/core/Link';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: props => (props.path === '/share' ? 'block' : 'none'),\r\n    backgroundColor: theme.palette.primary.light,\r\n    flexGrow: 1,\r\n    padding: `${theme.spacing(1)}px`,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  wrapper: {\r\n    width: '100%',\r\n    wordBreak: 'break-all',\r\n    marginBottom: `${theme.spacing(2)}px`,\r\n  },\r\n  icon: {\r\n    marginRight: `${theme.spacing(2)}px`,\r\n  },\r\n}));\r\n\r\nconst PageShare = ({ path }) => {\r\n  const classes = useStyles({ path });\r\n  const redoc = React.useContext(RedocContext);\r\n  const encoded = redoc.getConfig(true);\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Card>\r\n        <CardHeader\r\n          title=\"SHARE LINK\"\r\n          titleTypographyProps={{ variant: 'h6' }}\r\n          subheader=\"share you work with others, this will include spec url, settings and theme\"\r\n        />\r\n        <CardContent>\r\n          <Box className={classes.wrapper}>\r\n            <Link\r\n              href={`${process.env.REACT_APP_BASE_URL}/#/?config=${encoded}`}\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              underline=\"none\">\r\n              {`${process.env.REACT_APP_BASE_URL}/#/?config=${encoded.substring(\r\n                0,\r\n                48\r\n              )}...`}\r\n            </Link>\r\n          </Box>\r\n          <Paper className={classes.warning}>\r\n            <WarningIcon className={classes.icon} />\r\n            <Typography variant=\"body2\">\r\n              UNTRUSTED SPEC will always be TRUE when sharing your work with\r\n              others\r\n            </Typography>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nPageShare.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n};\r\n\r\nPageShare.defaultProps = {\r\n  path: '/',\r\n};\r\n\r\nexport default PageShare;\r\n","import { withStyles } from '@material-ui/core/styles';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nexport default withStyles(theme => ({\r\n  root: {\r\n    minWidth: 'auto',\r\n    color: theme.palette.primary.light,\r\n    '&:hover': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n}))(ListItemIcon);\r\n","import { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nexport default withStyles(theme => ({\r\n  gutters: {\r\n    paddingLeft: 13,\r\n    paddingRight: 13,\r\n  },\r\n  dense: {\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n  },\r\n  button: {\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  root: {\r\n    flexGrow: 0,\r\n    '&$selected': {\r\n      backgroundColor: 'transparent !important',\r\n      '&>div': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n  },\r\n  selected: {},\r\n}))(ListItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport CustomScrollbars from '../custom-scrollbars';\r\n\r\nconst useStyles = makeStyles({\r\n  uppercase: {\r\n    textTransform: 'uppercase',\r\n  },\r\n});\r\n\r\nconst CustomExpansionPanel = ({ expanded, children, headerText, onChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ExpansionPanel\r\n      elevation={0}\r\n      square\r\n      expanded={expanded}\r\n      onChange={onChange}>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        IconButtonProps={{ color: 'inherit', edge: 'start' }}>\r\n        <Typography\r\n          className={classes.uppercase}\r\n          color=\"textPrimary\"\r\n          variant=\"caption\">\r\n          {headerText}\r\n        </Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <CustomScrollbars>{children}</CustomScrollbars>\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n};\r\n\r\nCustomExpansionPanel.propTypes = {\r\n  expanded: PropTypes.bool.isRequired,\r\n  children: PropTypes.element,\r\n  headerText: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nCustomExpansionPanel.defaultProps = {\r\n  expanded: false,\r\n  headerText: 'HEADER TEXT',\r\n  onChange: () => {},\r\n};\r\n\r\nexport default CustomExpansionPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ExpansionPanel from '../expansion-panel';\r\nimport { gaEvent, toReadableString } from '../../utils';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    width: 300,\r\n    borderTop: `solid ${theme.spacing(1)}px ${theme.palette.primary.dark}`,\r\n    borderBottom: `solid ${theme.spacing(1)}px ${theme.palette.primary.dark}`,\r\n    borderRight: `solid ${theme.spacing(1)}px ${theme.palette.primary.dark}`,\r\n  },\r\n}));\r\n\r\nconst SidebarPanel = ({\r\n  title,\r\n  sections,\r\n  defaultSection,\r\n  action,\r\n  gaAction,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = React.useState(defaultSection);\r\n  return (\r\n    <Box className={classes.root}>\r\n      <List\r\n        dense\r\n        disablePadding\r\n        subheader={\r\n          <ListSubheader>\r\n            <Typography color=\"textPrimary\" variant=\"caption\">\r\n              {title}\r\n            </Typography>\r\n            {action}\r\n          </ListSubheader>\r\n        }>\r\n        <ListItem alignItems=\"flex-start\" disableGutters>\r\n          {sections.map(sections => (\r\n            <ExpansionPanel\r\n              key={sections.key}\r\n              expanded={selected === sections.key}\r\n              onChange={() => {\r\n                if (selected !== sections.key) {\r\n                  gaEvent('navigation', gaAction, sections.key);\r\n                }\r\n                setSelected(sections.key);\r\n              }}\r\n              headerText={toReadableString(sections.key)}>\r\n              {selected === sections.key ? sections.component : null}\r\n            </ExpansionPanel>\r\n          ))}\r\n        </ListItem>\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nSidebarPanel.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  action: PropTypes.element,\r\n  sections: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      key: PropTypes.string.isRequired,\r\n      component: PropTypes.element,\r\n    })\r\n  ).isRequired,\r\n  defaultSection: PropTypes.string.isRequired,\r\n  gaAction: PropTypes.oneOf(['settings', 'theme']).isRequired,\r\n};\r\n\r\nSidebarPanel.defaultProps = {\r\n  action: null,\r\n  title: 'PANEL',\r\n  sections: [{ key: 'general', component: null }],\r\n  defaultSection: 'general',\r\n};\r\n\r\nexport default SidebarPanel;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 0,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    maxHeight: 30,\r\n    height: 30,\r\n    minHeight: 30,\r\n  },\r\n  gutters: {\r\n    paddingLeft: props => (props.nested ? theme.spacing(4) : theme.spacing(2)),\r\n  },\r\n}));\r\n\r\nexport default props => {\r\n  const classes = useStyles(props);\r\n  const { nested, ...ListItemProps } = props;\r\n  return <ListItem classes={classes} {...ListItemProps} />;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PlayArrowOutlinedIcon from '@material-ui/icons/PlayArrowOutlined';\r\n\r\nimport ListItem from '../panel-list-item';\r\nimport { toReadableString } from '../../utils';\r\n\r\nconst StyledExpandLessIcon = withStyles({\r\n  root: { transform: 'rotate(90deg)' },\r\n  fontSizeSmall: { fontSize: '0.9em', marginLeft: -3, marginRight: 7 },\r\n})(PlayArrowIcon);\r\n\r\nconst StyledExpandMoreIcon = withStyles({\r\n  fontSizeSmall: { fontSize: '0.9em', marginLeft: -3, marginRight: 7 },\r\n})(PlayArrowOutlinedIcon);\r\n\r\nconst ListItemBase = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  children,\r\n  multiple,\r\n  open,\r\n  onClick,\r\n  primaryTypographyProps,\r\n  secondaryTypographyProps,\r\n  className,\r\n}) => {\r\n  const props = multiple ? { button: true, onClick } : { nested };\r\n  const textProps = className ? { className } : {};\r\n  return (\r\n    <ListItem component=\"div\" {...props}>\r\n      {multiple && open && <StyledExpandLessIcon fontSize=\"small\" />}\r\n      {multiple && !open && <StyledExpandMoreIcon fontSize=\"small\" />}\r\n      <ListItemText\r\n        {...textProps}\r\n        primary={readable ? toReadableString(text) : text}\r\n        primaryTypographyProps={primaryTypographyProps}\r\n        secondary={\r\n          secondary && readable ? toReadableString(secondary) : secondary\r\n        }\r\n        secondaryTypographyProps={secondaryTypographyProps}\r\n      />\r\n      {children}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nListItemBase.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  multiple: PropTypes.bool.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  primaryTypographyProps: PropTypes.object.isRequired,\r\n  secondaryTypographyProps: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nListItemBase.defaultProps = {\r\n  text: 'ITEM',\r\n  readable: true,\r\n  nested: false,\r\n  multiple: false,\r\n  open: false,\r\n  onClick: () => {},\r\n  primaryTypographyProps: { variant: 'caption', color: 'textPrimary' },\r\n  secondaryTypographyProps: { variant: 'caption', color: 'textSecondary' },\r\n};\r\n\r\nexport default ListItemBase;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport ListItemBase from '../list-item-base';\r\n\r\nconst StyledSwitch = withStyles({ edgeEnd: { marginRight: -11 } })(Switch);\r\n\r\nconst ListItemBoolean = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  checked,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <ListItemBase\r\n      text={text}\r\n      secondary={secondary}\r\n      readable={readable}\r\n      nested={nested}>\r\n      <StyledSwitch\r\n        edge=\"end\"\r\n        checked={checked}\r\n        onChange={() => onChange(!checked)}\r\n      />\r\n    </ListItemBase>\r\n  );\r\n};\r\n\r\nListItemBoolean.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nListItemBoolean.defaultProps = {\r\n  text: 'BOOLEAN',\r\n  readable: true,\r\n  nested: false,\r\n  checked: false,\r\n  onChange: () => {},\r\n};\r\n\r\nexport default ListItemBoolean;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { toReadableString } from '../../utils';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 28,\r\n    minHeight: 28,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  dividerFullWidth: {\r\n    margin: `0 0 0 ${theme.spacing(2)}px`,\r\n    fontWeight: 'bold',\r\n    textTransform: 'uppercase',\r\n  },\r\n}));\r\n\r\nconst CustomDivider = ({ text, readable, hideDivider }) => {\r\n  const classes = useStyles();\r\n  return [\r\n    hideDivider ? null : <Divider key=\"divider\" component=\"div\" />,\r\n    <Box key=\"text\" className={classes.root}>\r\n      <Typography\r\n        className={classes.dividerFullWidth}\r\n        color=\"primary\"\r\n        display=\"block\"\r\n        variant=\"caption\">\r\n        {readable ? toReadableString(text) : text}\r\n      </Typography>\r\n    </Box>,\r\n  ];\r\n};\r\n\r\nCustomDivider.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  readable: PropTypes.bool.isRequired,\r\n  hideDivider: PropTypes.bool.isRequired,\r\n};\r\n\r\nCustomDivider.defaultProps = {\r\n  text: 'DIVIDER',\r\n  readable: true,\r\n  hideDivider: false,\r\n};\r\n\r\nexport default CustomDivider;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Popover from 'react-popover';\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n  },\r\n  selected: {\r\n    width: 36,\r\n    height: 14,\r\n    borderRadius: 2,\r\n    border: `solid 1px ${theme.palette.primary.dark}`,\r\n    backgroundColor: props => props.color,\r\n  },\r\n  popover: {\r\n    zIndex: 10000,\r\n  },\r\n}));\r\n\r\nconst ColorPicker = ({ color, onChange }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles({ color });\r\n  const display = evt => {\r\n    evt.stopPropagation();\r\n    setOpen(!open);\r\n  };\r\n  if (open) {\r\n    return (\r\n      <Popover\r\n        className={classes.popover}\r\n        preferPlace=\"right\"\r\n        isOpen\r\n        body={\r\n          <SketchPicker\r\n            color={color}\r\n            onChange={(color, evt) => {\r\n              evt.stopPropagation();\r\n            }}\r\n            onChangeComplete={color => {\r\n              setOpen(false);\r\n              onChange(color);\r\n            }}\r\n          />\r\n        }\r\n        onOuterAction={() => setOpen(false)}>\r\n        <Box className={classes.root} onClick={display}>\r\n          <Box className={classes.selected} />\r\n        </Box>\r\n      </Popover>\r\n    );\r\n  }\r\n  return (\r\n    <Box className={classes.root} onClick={display}>\r\n      <Box className={classes.selected} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nColorPicker.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nColorPicker.defaultProps = {\r\n  color: '#FFFFFF',\r\n  onChange: () => {},\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListItemBase from '../list-item-base';\r\nimport ColorPicker from '../color-picker';\r\nimport { toRgbaString } from '../../utils';\r\n\r\nconst ListItemColor = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  color,\r\n  onChange,\r\n}) => (\r\n  <ListItemBase\r\n    text={text}\r\n    secondary={secondary}\r\n    readable={readable}\r\n    nested={nested}>\r\n    <ColorPicker\r\n      color={color}\r\n      onChange={value => onChange(toRgbaString(value.rgb))}\r\n    />\r\n  </ListItemBase>\r\n);\r\n\r\nListItemColor.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nListItemColor.defaultProps = {\r\n  text: 'COLOR',\r\n  readable: true,\r\n  nested: false,\r\n  color: '#000000',\r\n  onChange: () => {},\r\n};\r\n\r\nexport default ListItemColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { string } from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport ListItemBase from '../list-item-base';\r\nimport { toReadableString } from '../../utils';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    fontSize: 12,\r\n    width: props => props.width,\r\n  },\r\n  input: {\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nconst ListItemInput = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  value,\r\n  onChange,\r\n  schema,\r\n  width,\r\n}) => {\r\n  const classes = useStyles({ width });\r\n  const [state, setState] = React.useState(`${value}`);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const readableText = toReadableString(text);\r\n  React.useEffect(() => {\r\n    setState(`${value}`);\r\n  }, [value]);\r\n  const onBlur = evt => {\r\n    if (state !== `${value}`) {\r\n      if (schema) {\r\n        schema\r\n          .validate(state)\r\n          .then(input => void onChange(input))\r\n          .catch(error => {\r\n            enqueueSnackbar(`${readableText.toUpperCase()} ${error.message}`, {\r\n              variant: 'error',\r\n            });\r\n            setState(`${value}`);\r\n          });\r\n      } else if (state !== `${value}`) {\r\n        onChange(state);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <ListItemBase\r\n      text={text}\r\n      secondary={secondary}\r\n      readable={readable}\r\n      nested={nested}>\r\n      <FormControl>\r\n        <Input\r\n          classes={classes}\r\n          value={state}\r\n          inputProps={{\r\n            onBlur,\r\n            spellCheck: false,\r\n            autoComplete: 'off',\r\n            autoCorrect: 'off',\r\n            autoCapitalize: 'off',\r\n          }}\r\n          onChange={evt => setState(`${evt.target.value}`)}\r\n          disableUnderline\r\n        />\r\n      </FormControl>\r\n    </ListItemBase>\r\n  );\r\n};\r\n\r\nListItemInput.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  schema: PropTypes.object.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n};\r\n\r\nListItemInput.defaultProps = {\r\n  text: 'INPUT',\r\n  readable: true,\r\n  nested: false,\r\n  value: 'text',\r\n  onChange: () => {},\r\n  schema: string().required('is required'),\r\n  width: 50,\r\n};\r\n\r\nexport default ListItemInput;\r\n","import React from 'react';\r\nimport { string } from 'yup';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemInput from '../list-item-input';\r\n\r\nconst schema = string().required('is required');\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return (\r\n    <List dense component=\"nav\" disablePadding>\r\n      {Object.keys(redoc.labels).map(key => (\r\n        <ListItemInput\r\n          key={key}\r\n          text={key}\r\n          value={redoc.labels[key]}\r\n          onChange={value => redoc.settingsLabel(key, value)}\r\n          width={130}\r\n          schema={schema}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport SidebarPanel from '../sidebar-panel';\r\nimport RedocSettingsExpandResponses from '../redoc-settings-expand-responses';\r\nimport RedocSettingsGeneral from '../redoc-settings-general';\r\nimport RedocSettingsLabels from '../redoc-settings-labels';\r\nimport { RedocContext } from '../../contexts/redoc';\r\n\r\nconst SECTIONS = [\r\n  { key: 'general', component: <RedocSettingsGeneral /> },\r\n  { key: 'expandResponses', component: <RedocSettingsExpandResponses /> },\r\n  { key: 'labels', component: <RedocSettingsLabels /> },\r\n];\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  const action = (\r\n    <Button\r\n      size=\"small\"\r\n      color=\"secondary\"\r\n      onClick={() => redoc.resetSettings()}>\r\n      RESET\r\n    </Button>\r\n  );\r\n  return (\r\n    <SidebarPanel\r\n      title=\"REDOC SETTINGS\"\r\n      defaultSection=\"general\"\r\n      sections={SECTIONS}\r\n      action={action}\r\n      gaAction=\"settings\"\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemBoolean from '../list-item-boolean';\r\nimport { redocOptions } from '../../utils';\r\nimport ListItemColor from '../list-item-color';\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return (\r\n    <List dense component=\"nav\">\r\n      <ListItemColor\r\n        text=\"backgroundColor\"\r\n        color={redoc.backgroundColor}\r\n        onChange={color => redoc.settingsBackgroundColor(color)}\r\n      />\r\n      {redocOptions.map(option => (\r\n        <ListItemBoolean\r\n          key={option.text}\r\n          text={option.text}\r\n          checked={redoc.options.indexOf(option.property) !== -1}\r\n          onChange={() => redoc.settingsOption(option.property)}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemBoolean from '../list-item-boolean';\r\nimport ListItemDivider from '../list-item-divider';\r\nimport { expandResponses } from '../../utils';\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return (\r\n    <List dense component=\"nav\" disablePadding>\r\n      <ListItemBoolean\r\n        text=\"all\"\r\n        checked={redoc.expandResponses.indexOf('all') !== -1}\r\n        onChange={value => redoc.settingsExpandResponses('all')}\r\n      />\r\n      {Object.keys(expandResponses).map(key => {\r\n        const components = [<ListItemDivider key={key} text={key} />];\r\n        Object.keys(expandResponses[key]).forEach(inner => {\r\n          components.push(\r\n            <ListItemBoolean\r\n              key={`${key}-${inner}`}\r\n              text={inner}\r\n              secondary={expandResponses[key][inner]}\r\n              checked={redoc.expandResponses.indexOf(inner) !== -1}\r\n              readable={false}\r\n              onChange={value => redoc.settingsExpandResponses(inner)}\r\n            />\r\n          );\r\n        });\r\n        return components;\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemColor from '../list-item-color';\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return Object.keys(redoc.theme.colors.border).map(key => (\r\n    <ListItemColor\r\n      key={key}\r\n      text={key}\r\n      color={redoc.theme.colors.border[key]}\r\n      onChange={value => redoc.themeColorSingle(`colors.border.${key}`, value)}\r\n      nested\r\n    />\r\n  ));\r\n};\r\n","import React from 'react';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemColor from '../list-item-color';\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return Object.keys(redoc.theme.colors.http).map(key => (\r\n    <ListItemColor\r\n      key={key}\r\n      text={key}\r\n      color={redoc.theme.colors.http[key]}\r\n      onChange={value => redoc.themeColorSingle(`colors.http.${key}`, value)}\r\n      nested\r\n    />\r\n  ));\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport { CustomScrollbarsContext } from '../../contexts/custom-scrollbars';\r\nimport ListItemBase from '../list-item-base';\r\nimport ColorPicker from '../color-picker';\r\nimport { toRgbaString } from '../../utils';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: { height: 'auto' },\r\n  nested: { color: theme.palette.primary.dark },\r\n  nestedTypography: { fontWeight: 'bolder' },\r\n}));\r\n\r\nconst ListItemColorMultiple = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  colors,\r\n  props,\r\n  onChange,\r\n  onChangeColor,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const scrollbars = React.useContext(CustomScrollbarsContext);\r\n  const components = [\r\n    <ListItemBase\r\n      key=\"tone\"\r\n      multiple\r\n      open={open}\r\n      onClick={evt => {\r\n        setOpen(!open);\r\n        scrollbars.update();\r\n      }}\r\n      text={text}\r\n      secondary={secondary}\r\n      readable={readable}>\r\n      <ColorPicker\r\n        color={colors[props[0]]}\r\n        onChange={value => onChange(toRgbaString(value.rgb))}\r\n      />\r\n    </ListItemBase>,\r\n  ];\r\n  if (open && props.length > 1) {\r\n    components.push(\r\n      <List key=\"collapse\" dense component=\"nav\" disablePadding className={classes.list}>\r\n        {props.map(prop => (\r\n          <ListItemBase\r\n            key={prop}\r\n            text={prop}\r\n            readable={readable}\r\n            nested\r\n            className={classes.nested}\r\n            primaryTypographyProps={{\r\n              variant: 'caption',\r\n              color: 'primary',\r\n              classes: { root: classes.nestedTypography },\r\n            }}>\r\n            <ColorPicker\r\n              color={colors[prop]}\r\n              onChange={value => onChangeColor(prop, toRgbaString(value.rgb))}\r\n            />\r\n          </ListItemBase>\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n  return components;\r\n};\r\n\r\nListItemColorMultiple.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  colors: PropTypes.object.isRequired,\r\n  props: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onChangeColor: PropTypes.func.isRequired,\r\n};\r\n\r\nListItemColorMultiple.defaultProps = {\r\n  text: 'COLORS',\r\n  readable: true,\r\n  colors: { primary: '#333333' },\r\n  props: ['primary'],\r\n  onChange: () => {},\r\n  onChangeColor: () => {},\r\n};\r\n\r\nexport default ListItemColorMultiple;\r\n","import React from 'react';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemColorMultiple from '../list-item-color-multiple';\r\n\r\nconst TONE_COLORS = ['primary', 'success', 'warning', 'error'];\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return TONE_COLORS.map(color => (\r\n    <ListItemColorMultiple\r\n      key={color}\r\n      text={color}\r\n      colors={redoc.theme.colors[color]}\r\n      props={['main', 'light', 'dark', 'contrastText']}\r\n      onChange={value => redoc.themeColorTone(`colors.${color}`, value)}\r\n      onChangeColor={(property, value) =>\r\n        redoc.themeColorSingle(`colors.${color}.${property}`, value)\r\n      }\r\n    />\r\n  )).concat(\r\n    <ListItemColorMultiple\r\n      key=\"text\"\r\n      text=\"text\"\r\n      colors={redoc.theme.colors.text}\r\n      props={['primary', 'secondary']}\r\n      onChange={value => redoc.themeColorText('colors.text', value)}\r\n      onChangeColor={(property, value) =>\r\n        redoc.themeColorSingle(`colors.text.${property}`, value)\r\n      }\r\n    />,\r\n    <ListItemColorMultiple\r\n      key=\"links\"\r\n      text=\"links\"\r\n      colors={redoc.theme.typography.links}\r\n      props={['color', 'visited', 'hover']}\r\n      onChange={value => redoc.themeColorLinks('typography.links', value)}\r\n      onChangeColor={(property, value) =>\r\n        redoc.themeColorSingle(`typography.links.${property}`, value)\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemColorMultiple from '../list-item-color-multiple';\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return Object.keys(redoc.theme.colors.responses).map(key => (\r\n    <ListItemColorMultiple\r\n      key={key}\r\n      text={key}\r\n      colors={redoc.theme.colors.responses[key]}\r\n      props={['color', 'backgroundColor']}\r\n      onChange={value =>\r\n        redoc.themeColorBackground(`colors.responses.${key}`, value)\r\n      }\r\n      onChangeColor={(property, value) =>\r\n        redoc.themeColorSingle(`colors.response.${key}.${property}`, value)\r\n      }\r\n    />\r\n  ));\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { string } from 'yup';\r\n\r\nimport ListItemInput from '../list-item-input';\r\n\r\nconst schema = string()\r\n  .required('is required')\r\n  .matches(/^\\d+$/g, 'must be a positive integer');\r\n\r\nconst ListItemInteger = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  value,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <ListItemInput\r\n      text={text}\r\n      secondary={secondary}\r\n      readable={readable}\r\n      value={value}\r\n      nested={nested}\r\n      onChange={value => onChange(parseInt(value, 10))}\r\n      width={50}\r\n      schema={schema}\r\n    />\r\n  );\r\n};\r\n\r\nListItemInteger.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nListItemInteger.defaultProps = {\r\n  text: 'INTEGER',\r\n  readable: true,\r\n  nested: false,\r\n  value: 0,\r\n  onChange: () => {},\r\n};\r\n\r\nexport default ListItemInteger;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { string } from 'yup';\r\n\r\nimport ListItemInput from '../list-item-input';\r\n\r\nconst schema = string()\r\n  .required('is required')\r\n  .matches(\r\n    /^\\d+\\.?\\d*(cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|%)$/g,\r\n    'must be a valid css unit (cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|%)'\r\n  );\r\n\r\nconst ListItemUnit = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  value,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <ListItemInput\r\n      text={text}\r\n      secondary={secondary}\r\n      readable={readable}\r\n      value={value}\r\n      nested={nested}\r\n      onChange={onChange}\r\n      width={50}\r\n      schema={schema}\r\n    />\r\n  );\r\n};\r\n\r\nListItemUnit.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nListItemUnit.defaultProps = {\r\n  text: 'UNIT',\r\n  readable: true,\r\n  nested: false,\r\n  value: '100%',\r\n  onChange: () => {},\r\n};\r\n\r\nexport default ListItemUnit;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport ListItemBase from '../list-item-base';\r\n\r\nconst StyledTextField = withStyles({\r\n  root: {\r\n    width: 'auto',\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  select: {\r\n    fontSize: 12,\r\n    padding: `${theme.spacing(0.5)}px 0`,\r\n  },\r\n  icon: {\r\n    display: 'none',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.primary.light,\r\n  },\r\n  item: {\r\n    minHeight: 'unset',\r\n    padding: `0 ${theme.spacing(1)}px`,\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\nconst ListItemSelect = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  value,\r\n  items,\r\n  onChange,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ListItemBase\r\n      text={text}\r\n      secondary={secondary}\r\n      readable={readable}\r\n      nested={nested}>\r\n      <FormControl>\r\n        <StyledTextField\r\n          select\r\n          value={value}\r\n          InputProps={{ disableUnderline: true }}\r\n          SelectProps={{\r\n            classes: {\r\n              root: classes.select,\r\n              icon: classes.icon,\r\n            },\r\n            MenuProps: {\r\n              MenuListProps: {\r\n                dense: true,\r\n              },\r\n              classes: {\r\n                paper: classes.paper,\r\n              },\r\n            },\r\n          }}\r\n          onChange={evt => onChange(evt.target.value)}>\r\n          {items.map(item => (\r\n            <MenuItem\r\n              key={item}\r\n              className={classes.item}\r\n              value={item}\r\n              dense\r\n              disableGutters>\r\n              {item}\r\n            </MenuItem>\r\n          ))}\r\n        </StyledTextField>\r\n      </FormControl>\r\n    </ListItemBase>\r\n  );\r\n};\r\n\r\nListItemSelect.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nListItemSelect.defaultProps = {\r\n  text: 'SELECT',\r\n  readable: true,\r\n  nested: false,\r\n  value: 'none',\r\n  items: ['none'],\r\n  onChange: () => {},\r\n};\r\n\r\nexport default ListItemSelect;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListItemSelect from '../list-item-select';\r\n\r\nconst VALUES = [\r\n  'capitalize',\r\n  'inherit',\r\n  'initial',\r\n  'lowercase',\r\n  'none',\r\n  'unset',\r\n  'uppercase',\r\n];\r\n\r\nconst ListItemTextTransform = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  value,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <ListItemSelect\r\n      text={text}\r\n      secondary={secondary}\r\n      readable={readable}\r\n      value={value}\r\n      nested={nested}\r\n      items={VALUES}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nListItemTextTransform.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  value: PropTypes.oneOf(VALUES).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nListItemTextTransform.defaultProps = {\r\n  text: 'TEXT TRANSFORM',\r\n  readable: true,\r\n  nested: false,\r\n  value: 'inherit',\r\n  onChange: () => {},\r\n};\r\n\r\nexport default ListItemTextTransform;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListItemSelect from '../list-item-select';\r\n\r\nconst VALUES = ['auto', 'none', 'antialiased', 'subpixel-antialiased'];\r\n\r\nconst ListItemSmoothing = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  value,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <ListItemSelect\r\n      text={text}\r\n      secondary={secondary}\r\n      readable={readable}\r\n      value={value}\r\n      nested={nested}\r\n      items={VALUES}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nListItemSmoothing.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  value: PropTypes.oneOf(VALUES).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nListItemSmoothing.defaultProps = {\r\n  text: 'SMOOTHING',\r\n  readable: true,\r\n  nested: false,\r\n  value: 'inherit',\r\n  onChange: () => {},\r\n};\r\n\r\nexport default ListItemSmoothing;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListItemSelect from '../list-item-select';\r\n\r\nconst VALUES = [\r\n  'normal',\r\n  'bold',\r\n  'bolder',\r\n  'lighter',\r\n  'initial',\r\n  'inherit',\r\n  '100',\r\n  '200',\r\n  '300',\r\n  '400',\r\n  '500',\r\n  '600',\r\n  '700',\r\n  '800',\r\n  '900',\r\n];\r\n\r\nconst ListItemWeight = ({\r\n  text,\r\n  secondary,\r\n  readable,\r\n  nested,\r\n  value,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <ListItemSelect\r\n      text={text}\r\n      secondary={secondary}\r\n      readable={readable}\r\n      value={value}\r\n      nested={nested}\r\n      items={VALUES}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nListItemWeight.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  secondary: PropTypes.string,\r\n  readable: PropTypes.bool.isRequired,\r\n  nested: PropTypes.bool.isRequired,\r\n  value: PropTypes.oneOf(VALUES).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nListItemWeight.defaultProps = {\r\n  text: 'WEIGHT',\r\n  readable: true,\r\n  nested: false,\r\n  value: 'inherit',\r\n  onChange: () => {},\r\n};\r\n\r\nexport default ListItemWeight;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport SidebarPanel from '../sidebar-panel';\r\nimport RedocThemeColors from '../redoc-theme-colors';\r\nimport RedocThemeGeneral from '../redoc-theme-general';\r\nimport RedocThemeMenu from '../redoc-theme-menu';\r\nimport RedocThemeSchema from '../redoc-theme-schema';\r\nimport RedocThemeTypography from '../redoc-theme-typography';\r\nimport { RedocContext } from '../../contexts/redoc';\r\n\r\nconst SECTIONS = [\r\n  { key: 'general', component: <RedocThemeGeneral /> },\r\n  { key: 'colors', component: <RedocThemeColors /> },\r\n  { key: 'schema', component: <RedocThemeSchema /> },\r\n  { key: 'typography', component: <RedocThemeTypography /> },\r\n  { key: 'menu', component: <RedocThemeMenu /> },\r\n];\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  const action = (\r\n    <Button size=\"small\" color=\"secondary\" onClick={() => redoc.resetTheme()}>\r\n      RESET\r\n    </Button>\r\n  );\r\n  return (\r\n    <SidebarPanel\r\n      title=\"REDOC THEME\"\r\n      defaultSection=\"general\"\r\n      sections={SECTIONS}\r\n      action={action}\r\n      gaAction=\"theme\"\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemColor from '../list-item-color';\r\nimport ListItemInteger from '../list-item-integer';\r\nimport ListItemUnit from '../list-item-unit';\r\nimport ListItemDivider from '../list-item-divider';\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return (\r\n    <List dense component=\"nav\" disablePadding>\r\n      <ListItemDivider text=\"spacing\" hideDivider />\r\n      <ListItemInteger\r\n        text=\"unit\"\r\n        value={redoc.theme.spacing.unit}\r\n        onChange={value => redoc.themeSpacing('spacing', value)}\r\n        nested\r\n      />\r\n      <ListItemInteger\r\n        text=\"sectionHorizontal\"\r\n        value={redoc.theme.spacing.sectionHorizontal}\r\n        onChange={value =>\r\n          redoc.themeIntegerSingle('spacing.sectionHorizontal', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemInteger\r\n        text=\"sectionVertical\"\r\n        value={redoc.theme.spacing.sectionVertical}\r\n        onChange={value =>\r\n          redoc.themeIntegerSingle('spacing.sectionVertical', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemDivider text=\"breakpoints\" />\r\n      {Object.keys(redoc.theme.breakpoints).map(key => (\r\n        <ListItemUnit\r\n          key={key}\r\n          text={key}\r\n          value={redoc.theme.breakpoints[key]}\r\n          onChange={value => redoc.themeUnitSingle(`breakpoints.${key}`, value)}\r\n          nested\r\n        />\r\n      ))}\r\n      <ListItemDivider text=\"logo\" />\r\n      {Object.keys(redoc.theme.logo).map(key => (\r\n        <ListItemUnit\r\n          key={key}\r\n          text={key}\r\n          value={redoc.theme.logo[key]}\r\n          onChange={value => redoc.themeUnitSingle(`logo.${key}`, value)}\r\n          nested\r\n        />\r\n      ))}\r\n      <ListItemDivider text=\"rightPanel\" />\r\n      <ListItemColor\r\n        text=\"backgroundColor\"\r\n        color={redoc.theme.rightPanel.backgroundColor}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('rightPanel.backgroundColor', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemColor\r\n        text=\"textColor\"\r\n        color={redoc.theme.rightPanel.textColor}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('rightPanel.textColor', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemUnit\r\n        text=\"width\"\r\n        value={redoc.theme.rightPanel.width}\r\n        onChange={value => redoc.themeUnitSingle('rightPanel.width', value)}\r\n        nested\r\n      />\r\n      <ListItemDivider text=\"codeSample\" />\r\n      <ListItemColor\r\n        text=\"backgroundColor\"\r\n        color={redoc.theme.codeSample.backgroundColor}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('codeSample.backgroundColor', value)\r\n        }\r\n        nested\r\n      />\r\n    </List>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport BordersColorsItems from './borders-colors-items';\r\nimport HttpColorsItems from './http-colors-items';\r\nimport MainColorsItem from './main-colors-items';\r\nimport ResponsesColorsItem from './responses-colors-items';\r\nimport ListItemDivider from '../list-item-divider';\r\n\r\nexport default () => (\r\n  <List dense component=\"nav\" disablePadding>\r\n    <MainColorsItem />\r\n    <ListItemDivider text=\"borders\" />\r\n    <BordersColorsItems />\r\n    <ListItemDivider text=\"responses\" />\r\n    <ResponsesColorsItem />\r\n    <ListItemDivider text=\"http\" />\r\n    <HttpColorsItems />\r\n  </List>\r\n);\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemColor from '../list-item-color';\r\nimport ListItemUnit from '../list-item-unit';\r\nimport ListItemDivider from '../list-item-divider';\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return (\r\n    <List dense component=\"nav\" disablePadding>\r\n      <ListItemColor\r\n        text=\"linesColor\"\r\n        color={redoc.theme.schema.linesColor}\r\n        onChange={value => redoc.themeColorSingle('schema.linesColor', value)}\r\n      />\r\n      <ListItemUnit\r\n        text=\"defaultDetailsWidth\"\r\n        value={redoc.theme.schema.defaultDetailsWidth}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('schema.defaultDetailsWidth', value)\r\n        }\r\n      />\r\n      <ListItemColor\r\n        text=\"typeNameColor\"\r\n        color={redoc.theme.schema.typeNameColor}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('schema.typeNameColor', value)\r\n        }\r\n      />\r\n      <ListItemColor\r\n        text=\"typeTitleColor\"\r\n        color={redoc.theme.schema.typeTitleColor}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('schema.typeTitleColor', value)\r\n        }\r\n      />\r\n      <ListItemColor\r\n        text=\"requireLabelColor\"\r\n        color={redoc.theme.schema.requireLabelColor}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('schema.requireLabelColor', value)\r\n        }\r\n      />\r\n      <ListItemUnit\r\n        text=\"labelsTextSize\"\r\n        value={redoc.theme.schema.labelsTextSize}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('schema.labelsTextSize', value)\r\n        }\r\n      />\r\n      <ListItemUnit\r\n        text=\"nestingSpacing\"\r\n        value={redoc.theme.schema.nestingSpacing}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('schema.nestingSpacing', value)\r\n        }\r\n      />\r\n      <ListItemColor\r\n        text=\"nestedBackground\"\r\n        color={redoc.theme.schema.nestedBackground}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('schema.nestedBackground', value)\r\n        }\r\n      />\r\n      <ListItemDivider text=\"arrow\" />\r\n      <ListItemUnit\r\n        text=\"size\"\r\n        value={redoc.theme.schema.arrow.size}\r\n        onChange={value => redoc.themeUnitSingle('schema.arrow.size', value)}\r\n        nested\r\n      />\r\n      <ListItemColor\r\n        text=\"color\"\r\n        color={redoc.theme.schema.arrow.color}\r\n        onChange={value => redoc.themeColorSingle('schema.arrow.color', value)}\r\n        nested\r\n      />\r\n    </List>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemBoolean from '../list-item-boolean';\r\nimport ListItemColor from '../list-item-color';\r\nimport ListItemSmoothing from '../list-item-smoothing';\r\nimport ListItemUnit from '../list-item-unit';\r\nimport ListItemWeight from '../list-item-weight';\r\nimport ListItemDivider from '../list-item-divider';\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return (\r\n    <List dense component=\"nav\" disablePadding>\r\n      <ListItemUnit\r\n        text=\"fontSize\"\r\n        value={redoc.theme.typography.fontSize}\r\n        onChange={value => redoc.themeUnitSingle('typography.fontSize', value)}\r\n      />\r\n      <ListItemUnit\r\n        text=\"lineHeight\"\r\n        value={redoc.theme.typography.lineHeight}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('typography.lineHeight', value)\r\n        }\r\n      />\r\n      <ListItemWeight\r\n        text=\"fontWeightRegular\"\r\n        value={redoc.theme.typography.fontWeightRegular}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('typography.fontWeightRegular', value)\r\n        }\r\n      />\r\n      <ListItemWeight\r\n        text=\"fontWeightBold\"\r\n        value={redoc.theme.typography.fontWeightBold}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('typography.fontWeightBold', value)\r\n        }\r\n      />\r\n      <ListItemWeight\r\n        text=\"fontWeightLight\"\r\n        value={redoc.theme.typography.fontWeightLight}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('typography.fontWeightLight', value)\r\n        }\r\n      />\r\n      <ListItemSmoothing\r\n        text=\"smoothing\"\r\n        value={redoc.theme.typography.smoothing}\r\n        onChange={value => redoc.themeUnitSingle('typography.smoothing', value)}\r\n      />\r\n      <ListItemBoolean\r\n        text=\"optimizeSpeed\"\r\n        checked={redoc.theme.typography.optimizeSpeed}\r\n        onChange={value => {\r\n          redoc.themeBooleanSingle('typography.optimizeSpeed', value);\r\n        }}\r\n      />\r\n      <ListItemDivider text=\"headings\" />\r\n      <ListItemWeight\r\n        text=\"fontWeight\"\r\n        value={redoc.theme.typography.headings.fontWeight}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('typography.headings.fontWeight', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemUnit\r\n        text=\"lineHeight\"\r\n        value={redoc.theme.typography.headings.lineHeight}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('typography.headings.lineHeight', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemDivider text=\"code\" />\r\n      <ListItemUnit\r\n        text=\"fontSize\"\r\n        value={redoc.theme.typography.code.fontSize}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('typography.code.fontSize', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemUnit\r\n        text=\"lineHeight\"\r\n        value={redoc.theme.typography.code.lineHeight}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('typography.code.lineHeight', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemWeight\r\n        text=\"fontWeight\"\r\n        value={redoc.theme.typography.code.fontWeight}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('typography.code.fontWeight', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemColor\r\n        text=\"color\"\r\n        color={redoc.theme.typography.code.color}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('typography.code.color', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemColor\r\n        text=\"backgroundColor\"\r\n        color={redoc.theme.typography.code.backgroundColor}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('typography.code.backgroundColor', value)\r\n        }\r\n        nested\r\n      />\r\n      <ListItemBoolean\r\n        text=\"wrap\"\r\n        checked={redoc.theme.typography.code.wrap}\r\n        onChange={value => {\r\n          redoc.themeBooleanSingle('typography.code.wrap', value);\r\n        }}\r\n        nested\r\n      />\r\n    </List>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport ListItemColor from '../list-item-color';\r\nimport ListItemTextTransform from '../list-item-text-transform';\r\nimport ListItemUnit from '../list-item-unit';\r\nimport ListItemDivider from '../list-item-divider';\r\n\r\nexport default () => {\r\n  const redoc = React.useContext(RedocContext);\r\n  return (\r\n    <List dense component=\"nav\" disablePadding>\r\n      <ListItemUnit\r\n        text=\"width\"\r\n        value={redoc.theme.menu.width}\r\n        onChange={value => redoc.themeUnitSingle('menu.width', value)}\r\n      />\r\n      <ListItemColor\r\n        text=\"backgroundColor\"\r\n        color={redoc.theme.menu.backgroundColor}\r\n        onChange={value =>\r\n          redoc.themeColorSingle('menu.backgroundColor', value)\r\n        }\r\n      />\r\n      <ListItemColor\r\n        text=\"textColor\"\r\n        color={redoc.theme.menu.textColor}\r\n        onChange={value => redoc.themeColorSingle('menu.textColor', value)}\r\n      />\r\n      <ListItemTextTransform\r\n        text=\"groupTextTransform\"\r\n        value={redoc.theme.menu.groupItems.textTransform}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('menu.groupItems.textTransform', value)\r\n        }\r\n      />\r\n      <ListItemTextTransform\r\n        text=\"level1TextTransform\"\r\n        value={redoc.theme.menu.level1Items.textTransform}\r\n        onChange={value =>\r\n          redoc.themeUnitSingle('menu.level1Items.textTransform', value)\r\n        }\r\n      />\r\n      <ListItemDivider text=\"arrow\" />\r\n      <ListItemUnit\r\n        text=\"size\"\r\n        value={redoc.theme.menu.arrow.size}\r\n        onChange={value => redoc.themeUnitSingle('menu.arrow.size', value)}\r\n        nested\r\n      />\r\n      <ListItemColor\r\n        text=\"color\"\r\n        color={redoc.theme.menu.arrow.color}\r\n        onChange={value => redoc.themeColorSingle('menu.arrow.color', value)}\r\n        nested\r\n      />\r\n    </List>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst useToggle = initialState => {\r\n  const [state, setState] = React.useState(initialState);\r\n  const toggle = value => setState(state === value ? initialState : value);\r\n  return [state, toggle];\r\n};\r\n\r\nexport default useToggle;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport FormatPaintIcon from '@material-ui/icons/FormatPaint';\r\n\r\nimport ListItemIcon from './sidebar-list-item-icon';\r\nimport ListItem from './sidebar-list-item';\r\nimport RedocPanelSettings from '../redoc-panel-settings';\r\nimport RedocPanelTheme from '../redoc-panel-theme';\r\nimport useToggle from '../../hooks/use-toggle';\r\nimport { gaEvent } from '../../utils';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\nconst SIDEBARS = {\r\n  NONE: 'none',\r\n  SETTINGS: 'settings',\r\n  THEME: 'theme',\r\n};\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const [selected, toggle] = useToggle(SIDEBARS.NONE);\r\n  const components = [\r\n    <Box key=\"sidebar\" className={classes.root}>\r\n      <List dense disablePadding>\r\n        <ListItem\r\n          button\r\n          selected={selected === SIDEBARS.SETTINGS}\r\n          onClick={() => {\r\n            if (selected !== SIDEBARS.SETTINGS) {\r\n              gaEvent('navigation', 'settings', 'general');\r\n            }\r\n            toggle(SIDEBARS.SETTINGS);\r\n          }}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={selected === SIDEBARS.THEME}\r\n          onClick={() => {\r\n            if (selected !== SIDEBARS.THEME) {\r\n              gaEvent('navigation', 'theme', 'general');\r\n            }\r\n            toggle(SIDEBARS.THEME);\r\n          }}>\r\n          <ListItemIcon>\r\n            <FormatPaintIcon />\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      </List>\r\n    </Box>,\r\n  ];\r\n  if (selected === SIDEBARS.SETTINGS) {\r\n    components.push(<RedocPanelSettings key=\"settings\" />);\r\n  }\r\n  if (selected === SIDEBARS.THEME) {\r\n    components.push(<RedocPanelTheme key=\"theme\" />);\r\n  }\r\n  return components;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport HeaderMenu from '../header-menu';\r\nimport HeaderTabs from '../header-tabs';\r\nimport PageHtml from '../page-html';\r\nimport PageShare from '../page-share';\r\nimport Sidebar from '../sidebar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100vh',\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  logo: {\r\n    marginRight: 9,\r\n  },\r\n  grid: {\r\n    flexGrow: 1,\r\n    flexDirection: 'row',\r\n    overflow: 'hidden',\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  wrapper: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    borderBottom: `solid ${theme.spacing(1)}px ${theme.palette.primary.dark}`,\r\n    borderRight: `solid ${theme.spacing(1)}px ${theme.palette.primary.dark}`,\r\n    position: 'relative',\r\n  },\r\n  iframe: {\r\n    flexGrow: 1,\r\n    display: props => (props.path === '/' ? 'block' : 'none'),\r\n    border: 'none',\r\n    height: '100%'\r\n  },\r\n}));\r\n\r\nconst Layout = ({ path }) => {\r\n  const classes = useStyles({ path });\r\n  const redoc = React.useContext(RedocContext);\r\n  const encoded = redoc.getConfig(true);\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CssBaseline />\r\n      <HeaderMenu />\r\n      <Grid container className={classes.grid} spacing={0}>\r\n        <Route path=\"/\" component={Sidebar} />\r\n        <Box className={classes.container}>\r\n          <Route path=\"/\" component={HeaderTabs} />\r\n          <Box className={classes.wrapper}>\r\n            <iframe\r\n              title=\"redoc\"\r\n              className={classes.iframe}\r\n              src={`./redoc.html?config=${encoded}`}\r\n            />\r\n            <PageHtml path={path} />\r\n            <PageShare path={path} />\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n};\r\n\r\nLayout.defaultProps = {\r\n  path: '/',\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nimport { gaEvent } from '../utils';\r\n\r\nconst useGoogleAnalytics = ({ pathname = '', search = '' }) => {\r\n  React.useEffect(() => {\r\n    const click = evt => {\r\n      if (window.gtag) {\r\n        const rootNode = document;\r\n        let element = evt.target;\r\n        while (element && element !== rootNode) {\r\n          const category = element.getAttribute('data-ga-event-category');\r\n          if (category) {\r\n            gaEvent(\r\n              category,\r\n              element.getAttribute('data-ga-event-action'),\r\n              element.getAttribute('data-ga-event-label')\r\n            );\r\n            break;\r\n          }\r\n          element = element.parentNode;\r\n        }\r\n      }\r\n    };\r\n    document.addEventListener('click', click);\r\n    return () => {\r\n      document.removeEventListener('click', click);\r\n    };\r\n  }, []);\r\n};\r\n\r\nexport default useGoogleAnalytics;\r\n","import React from 'react';\r\nimport queryString from 'query-string';\r\n\r\nimport Layout from './layout';\r\nimport { RedocContext } from '../../contexts/redoc';\r\nimport useGoogleAnalytics from '../../hooks/use-google-analytics';\r\n\r\nexport default ({ location, history: { push } }) => {\r\n  useGoogleAnalytics(location);\r\n  const redoc = React.useContext(RedocContext);\r\n  const pushCallback = React.useCallback(value => void push(value), [push]);\r\n  React.useEffect(() => {\r\n    const { config } = queryString.parse(location.search);\r\n    if (config) {\r\n      const json = JSON.parse(atob(config));\r\n      console.log(json);\r\n      redoc.setConfig(json);\r\n      pushCallback('/');\r\n    }\r\n  }, [location.search, redoc, pushCallback]);\r\n  return <Layout path={location.pathname} />;\r\n};\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nimport RedocContextProvider from './contexts/redoc';\r\nimport defaultTheme from './theme/redoc-editor-default';\r\nimport Layout from './components/layout';\r\n\r\nconst AppContainer = () => {\r\n  return (\r\n    <Router>\r\n      <MuiThemeProvider theme={defaultTheme}>\r\n        <SnackbarProvider\r\n          maxSnack={3}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n          autoHideDuration={2000}>\r\n          <RedocContextProvider>\r\n            <Route path=\"/\" component={Layout} />\r\n          </RedocContextProvider>\r\n        </SnackbarProvider>\r\n      </MuiThemeProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppContainer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'core-js/es';\r\nimport 'react-app-polyfill/ie9';\r\nimport 'mutation-observer';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}